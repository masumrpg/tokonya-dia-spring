version: '3.8'

services:
  # Spring Boot App
  app:
    container_name: app-container
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      SERVER_PORT: 80
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: tokonyadia
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      JWT_SECRET: secret
      JWT_EXPIRATION_IN_MINUTES: 60
      JWT_ISSUER: Tokonya Dia API
      REFRESH_TOKEN_EXPIRATION_IN_HOUR: 24
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: "Redispassword"
      USERNAME_ADMIN: admin
      PASSWORD_ADMIN: Adminpassword123@
      MENU_IMAGE_PATH: /app/images
      MIDTRANS_APP_URL: https://app.sandbox.midtrans.com
      MIDTRANS_API_URL: https://api.sandbox.midtrans.com
      MIDTRANS_SERVER_KEY: SB-Mid-server-Fufrjmw8dPA5vow16qEshkvi
    ports:
      - "80:80"
    depends_on:
      - db
      - redis
    volumes:
      - ./images:/app/images
    restart: always # restart policy

  # PostgreSQL
  db:
    container_name: db-container
    image: postgres:15
    environment:
      POSTGRES_DB: tokonyadia
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck: # Health check
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always # restart policy

  # Redis
  redis:
    container_name: redis-container
    image: redis:alpine
    environment:
      REDIS_PASSWORD: "Redispassword"
    ports:
      - "6379:6379"
    command: [ "redis-server", "--requirepass", "Redispassword" ]
    restart: always # restart policy

  # Prometheus
  prometheus:
    container_name: prometheus-container
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    restart: always # restart policy

  # Grafana
  grafana:
    container_name: grafana-container
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    restart: always # restart policy
    volumes:
      - grafana-data:/var/lib/grafana

volumes:
  pgdata:
  grafana-data:
